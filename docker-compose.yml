version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2638
      POSTGRES_DB: chat-app-register
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: chat-app-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_USER: postgres
      DB_PASSWORD: 2638
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_NAME: chat-app-register
    ports:
      - '3000:3000'
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: chat-app-frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./nginx:/app
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    depends_on:
      - frontend
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/dist:/usr/share/nginx/html
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
